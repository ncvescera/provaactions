# configuration file for git-cliff (0.1.0)

[changelog]
# changelog header
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
"""
# template for the changelog body
# https://tera.netlify.app/docs/#introduction
body = """
{% set github_repo_link = "https://github.com/ncvescera/provaactions" %}
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {{ commit.message | upper_first | trim_end }} ([{{ commit.id | truncate(length=7, end="") }}]({{ github_repo_link }}/commit/{{ commit.id }})) \
    {% endfor %}
{% endfor %}\n

**Full changelog: {{ github_repo_link }}/compare/{{ previous.version }}...{{ version }}**\n
"""
#postprocessors = [{ pattern = ".*", replace_command ='gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28 "/repos/ncvescera/provaactions/commits/$COMMIT_SHA | jq -r .author.login'}]
# remove the leading and trailing whitespace from the template
trim = true
# changelog footer
footer = """
<!-- generated by git-cliff -->
"""
# postprocessors= [
#     #{pattern = "@username", replace_command='gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28 "/repos/ncvescera/provaactions/commits/$COMMIT_SHA | jq -r .author.login'},
#     {patter="A", replace="X"},
# ]

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = false
# process each line of a commit as an individual commit
split_commits = false
# regex for parsing and grouping commits

commit_preprocessors = [
    {pattern = ".*", replace_command="echo -n \"$(head -1 $@) @$(gh api -H 'Accept: application/vnd.github+json' -H 'X-GitHub-Api-Version: 2022-11-28' /repos/ncvescera/provaactions/commits/$COMMIT_SHA | jq -r .author.login)\""}
    # {pattern = ".*", replace_command="${1} gh api -H 'Accept: application/vnd.github+json' -H 'X-GitHub-Api-Version: 2022-11-28' /repos/ncvescera/provaactions/commits/$COMMIT_SHA | jq -r .author.login"},
]

commit_parsers = [
    { message = "^feat", group = "Features üöÄ"},
    { message = "^fix", group = "Fixes üî®"},
    { message = "^doc", group = "Documentation üìù"},
    { message = "^perf", group = "Performance"},
    { message = "^refactor", group = "Refactor"},
    { message = "^style", group = "Styling"},
    { message = "^test", group = "Testing"},
    { message = "^chore\\(release\\): prepare for", skip = true},
    { message = "^chore", group = "Miscellaneous Tasks"},
    { body = ".*security", group = "Security"},
    { message = ".*", group = "Commits <img src='https://raw.githubusercontent.com/gilbarbara/logos/main/logos/git-icon.svg' width='20px' height='20px'>"},
]
# protect breaking changes from being skipped due to matching a skipping commit_parser
protect_breaking_commits = false
# filter out the commits that are not matched by commit parsers
filter_commits = false
# glob pattern for matching git tags
tag_pattern = "v[0-9]*"
# regex for skipping tags
skip_tags = "v0.1.0-beta.1"
# regex for ignoring tags
ignore_tags = ""
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
