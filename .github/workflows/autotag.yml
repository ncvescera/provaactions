# name: Auto Tag and Release
#
# on:
#   push:
#     branches: [main, master]
#
# jobs:
#   tag:
#     runs-on: ubuntu-latest
#     outputs:
#       newtag: ${{ steps.tag.outputs.new-tag }}
#     steps:
#       - uses: phish108/autotag-action@v1.1.64
#         id: tag
#         with:
#           github-token: ${{ secrets.GITHUB_TOKEN}}
#           with-v: "true"
#           branch: main
#           bump: major
#           release-branch: main
#           dry-run: "true"
#
#   release:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - name: Conventional Changelog Action
#         id: changelog
#         uses: TriPSs/conventional-changelog-action@v3
#         with:
#           github-token: ${{ secrets.GITHUB_TOKEN }}
#           output-file: "false"
#           skip-commit: "true"
#           skip-version-file: "true"
#           skip-tag: "true"
#
#       - name: Create Release
#         uses: actions/create-release@v1
#         if: ${{ steps.changelog.outputs.skipped == 'false' }}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ steps.changelog.outputs.tag }}
#           release_name: ${{ steps.changelog.outputs.tag }}
#           body: ${{ steps.changelog.outputs.clean_changelog }}

name: Auto Tag and Release

on:
  push:
    branches: [main, master]

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      newtag: ${{ steps.tag.outputs.new-tag }}
    steps:
      - uses: phish108/autotag-action@v1.1.64
        id: tag
        with:
          github-token: ${{ secrets.GITHUB_TOKEN}}
          with-v: "true"
          branch: main
          bump: major
          release-branch: main
          dry-run: "true"

  releasse:
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install JQ
        run: sudo apt-get install -y jq

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        with:
          config: .github/workflows/conf.toml
          args: -vv --latest --unreleased --strip header --tag v${{needs.tag.outputs.newtag}}
            #args: -vv --latest --strip header
            #--unreleased
        env:
          OUTPUT: CHANGES.md
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: cat ${{ steps.git-cliff.outputs.changelog }}
      - name: Create Release
        uses: actions/create-release@v1
        #if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{needs.tag.outputs.newtag}}"
          release_name: "v${{needs.tag.outputs.newtag}}"
          body: ${{ steps.git-cliff.outputs.content }}
  
  #${{ steps.git-cliff.outputs.changelog }}
# name: Auto Tag and Release
#
# on:
#   push:
#     branches: [main, master]
#
# jobs:
#   tag:
#     runs-on: ubuntu-latest
#     outputs:
#       newtag: ${{ steps.tag.outputs.new-tag }}
#     steps:
#       - uses: phish108/autotag-action@v1.1.64
#         id: tag
#         with:
#           github-token: ${{ secrets.GITHUB_TOKEN}}
#           with-v: "true"
#           branch: main
#           bump: major
#           release-branch: main
#           dry-run: "false"
#
#   release:
#     runs-on: ubuntu-latest
#     needs: tag
#     steps:
#       - uses: actions/checkout@v3
#       #- run: git 
#       - uses: "marvinpinto/action-automatic-releases@latest"
#         with:
#           repo_token: "${{ secrets.GITHUB_TOKEN }}"
#           automatic_release_tag: "v${{needs.tag.outputs.newtag}}"
#           prerelease: false
# name: Auto Tag and Release
#
# on:
#   push:
#     branches: [main, master]
#
# jobs:
#   tag:
#     runs-on: ubuntu-latest
#     outputs:
#       newtag: ${{ steps.tag.outputs.new-tag }}
#     steps:
#       - uses: phish108/autotag-action@v1.1.64
#         id: tag
#         with:
#           github-token: ${{ secrets.GITHUB_TOKEN}}
#           with-v: "true"
#           branch: main
#           bump: major
#           release-branch: main
#           dry-run: "true"
#
#   release:
#     runs-on: ubuntu-latest
#     needs: tag
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 2
#       - run: git pull
#       - uses: "marvinpinto/action-automatic-releases@latest"
#         with:
#           repo_token: "${{ secrets.GITHUB_TOKEN }}"
#           automatic_release_tag: "v${{needs.tag.outputs.newtag}}"
#           prerelease: false
# name: Release on push
#
# on: 
#   push:
#     branches:
#       - main
#
# jobs:
#   release-on-push:
#     runs-on: ubuntu-latest
#     env:
#       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#     steps:
#       - uses: actions/checkout@v3
#       - uses: rymndhng/release-on-push-action@master
#         with:
#           tag_prefix: v
#           bump_version_scheme: minor
#           use_github_release_notes: true
#
# name: Create Tag
#
# on:
#   push:
#     branches:
#       - main
#
# permissions:
#   id-token: write
#   contents: write
#   packages: write
#   pull-requests: read
#   
# jobs:
#   tag:
#     runs-on: ubuntu-latest
#     # outputs:
#     #   newtag: ${{ steps.tag.outputs.new-tag }}
#     env:
#       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#     steps:
#       - uses: actions/checkout@v3
#       # - uses: phish108/autotag-action@v1.1.64
#       #   id: tag
#       #   with:
#       #     github-token: ${{ secrets.GITHUB_TOKEN}}
#       #     with-v: 'true'
#       #     branch: main
#       #     bump: major
#       #     release-branch: main
#       #     dry-run: 'false'
#
#       - run: echo "previous_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
#       - name: Generate changelog
#         id: changelog
#         uses: jaywcjlove/changelog-generator@main
#         # if: env.previous_tag
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#           # filter-author: (jaywcjlove|Â∞èÂºüË∞ÉË∞É‚Ñ¢|dependabot|renovate\\[bot\\]|dependabot\\[bot\\]|Renovate Bot)
#           # filter: '[R|r]elease[d]\s+[v|V]\d(\.\d+){0,2}'
#           template: |
#                 ## Bugs
#                 {{fix}}
#                 ## Feature
#                 {{feat}}
#                 ## Improve
#                 {{refactor,perf,clean}}
#                 ## Misc 
#                 {{chore,style,ci||üî∂ Nothing change}}
#                 ## Unknown
#                 {{__unknown__}}
#
#       - name: Get the changelog
#         run: echo "${{ steps.changelog.outputs.changelog }}"
#
#       - uses: phish108/autotag-action@v1.1.64
#         id: create_tag
#         with:
#           github-token: ${{ secrets.GITHUB_TOKEN}}
#           with-v: 'true'
#           branch: main
#           bump: major
#           release-branch: main
#           dry-run: 'false'
#
#       - name: Create Release
#         uses: ncipollo/release-action@v1
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#           name: ${{ steps.create_tag.outputs.new-tag }}
#           tag: ${{ steps.create_tag.outputs.new-tag }}
#           body: |
#             ${{ steps.changelog.outputs.changelog }}
#
#             ${{ steps.changelog.outputs.compareurl }}
#             
#       # - uses: rymndhng/release-on-push-action@master
#       #   with:
#       #     tag_prefix: v
#       #     bump_version_scheme: minor
#       #     release_body: "${{ steps.Changelog.outputs.changelog }}"
#           # use_github_release_notes: true
#   # build:
#   #   needs: tag
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - name: Checkout
#   #       uses: actions/checkout@v2
#   #
#   #     - name: Release
#   #       uses: docker://antonyurchenko/git-release:latest
#   #       env:
#   #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       
#   # release:
#   #   runs-on: ubuntu-latest
#   #   needs: tag
#   #   steps:
#   #     - uses: actions/checkout@v3
#   #     - uses: "marvinpinto/action-automatic-releases@latest"
#   #       with:
#   #         repo_token: "${{ secrets.GITHUB_TOKEN }}"
#   #         automatic_release_tag: "v${{needs.tag.outputs.newtag}}"
#   #         prerelease: false
#       
#
