name: Lint Code Base

#############################
# Start the job on all push #
#############################
on:
  pull_request:
    branches: [master, main]

permissions:
  checks: write
  contents: write

jobs:
  linting:
    # Name the Job
    name: Lint Code Base
    # Set the agent to run on
    runs-on: ubuntu-latest

    ############################################
    # Grant status permission for MULTI_STATUS #
    ############################################
    permissions:
      pull-requests: write
      contents: read
      packages: read
      statuses: write

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper
          # list of changed files within `super-linter`
          fetch-depth: 2

      - name: Install Lacheck
        # run: sudo apt-get install lacheck -y
        run: sudo apt-get install chktex -y

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v36
        with:
          files: "**.tex"

      - name: Run Chktex
        id: chktex
        if: steps.changed-files.outputs.any_changed == 'true'
        # continue-on-error: true
        run: chktex ${{ steps.changed-files.outputs.all_changed_files }} -o lint_error.txt

      - name: Get Output
        if: failure()
        run: OUT=$(cat lint_error.txt)

      - name: Comment PR
        if: failure()
        uses: thollander/actions-comment-pull-request@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: $OUT "${cat lint_error.txt}" "${{ cat lint_error.txt }}"
          # message: |
          #   Hello world ! :wave: ```$(cat lint_error.txt)```
###############
# Set the Job #
###############
# jobs:
#   build:
#     # Name the Job
#     name: Lint Code Base
#     # Set the agent to run on
#     runs-on: ubuntu-latest
#
#     ############################################
#     # Grant status permission for MULTI_STATUS #
#     ############################################
#     permissions:
#       contents: read
#       packages: read
#       statuses: write
#
#     ##################
#     # Load all steps #
#     ##################
#     steps:
#       ##########################
#       # Checkout the code base #
#       ##########################
#       - name: Checkout Code
#         uses: actions/checkout@v3
#         with:
#           # Full git history is needed to get a proper
#           # list of changed files within `super-linter`
#           fetch-depth: 0
#
#       ################################
#       # Run Linter against code base #
#       ################################
#       - name: Lint Code Base
#         id: lint
#         uses: super-linter/super-linter@v5
#         env:
#           VALIDATE_ALL_CODEBASE: false
#           DEFAULT_BRANCH: main
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           VALIDATE_MARKDOWN: true
#           VALIDATE_LATEX: true
#
#name: Lint

#on:
# Replace pull_request with pull_request_target if you
# plan to use this action with forks, see the Limitations section
#pull_request:
#branches:
#- main
#- develop

# Down scope as necessary via https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
#permissions:
#checks: write
#contents: write

#jobs:
# run-linters:
#  name: Run linters
# runs-on: ubuntu-latest

#steps:
# - name: Check out Git repository
#  uses: actions/checkout@v3

#      - name: Set up Python 3
#       uses: actions/setup-python@v4
#      with:
#       python-version: '3.11'
#  - name: Install dependencies
#   run: |
#    python -m pip install --upgrade pip
#   pip install flake8

# - name: Install Node.js dependencies
#  run: yarn install

# - name: Run linters
#  uses: wearerequired/lint-action@v2
# with:
#  eslint: true
# eslint_args: "src/**"
#flake8: true
